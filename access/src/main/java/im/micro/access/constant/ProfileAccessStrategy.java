// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constant/profile_access_strategy.proto

package im.micro.access.constant;

/**
 * <pre>
 * 个人简介常量
 * </pre>
 *
 * Protobuf enum {@code im.turms.proto.ProfileAccessStrategy}
 */
public enum ProfileAccessStrategy
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 所有人都可以访问
   * </pre>
   *
   * <code>ALL = 0;</code>
   */
  ALL(0),
  /**
   * <pre>
   * 除了黑名单的所有用户都可以访问
   * </pre>
   *
   * <code>ALL_EXCEPT_BLACKLISTED_USERS = 1;</code>
   */
  ALL_EXCEPT_BLACKLISTED_USERS(1),
  /**
   * <pre>
   * 只有好友才能访问
   * </pre>
   *
   * <code>FRIENDS = 2;</code>
   */
  FRIENDS(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 所有人都可以访问
   * </pre>
   *
   * <code>ALL = 0;</code>
   */
  public static final int ALL_VALUE = 0;
  /**
   * <pre>
   * 除了黑名单的所有用户都可以访问
   * </pre>
   *
   * <code>ALL_EXCEPT_BLACKLISTED_USERS = 1;</code>
   */
  public static final int ALL_EXCEPT_BLACKLISTED_USERS_VALUE = 1;
  /**
   * <pre>
   * 只有好友才能访问
   * </pre>
   *
   * <code>FRIENDS = 2;</code>
   */
  public static final int FRIENDS_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ProfileAccessStrategy valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ProfileAccessStrategy forNumber(int value) {
    switch (value) {
      case 0: return ALL;
      case 1: return ALL_EXCEPT_BLACKLISTED_USERS;
      case 2: return FRIENDS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ProfileAccessStrategy>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ProfileAccessStrategy> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ProfileAccessStrategy>() {
          public ProfileAccessStrategy findValueByNumber(int number) {
            return ProfileAccessStrategy.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return im.micro.access.constant.ProfileAccessStrategyOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final ProfileAccessStrategy[] VALUES = values();

  public static ProfileAccessStrategy valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ProfileAccessStrategy(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:im.turms.proto.ProfileAccessStrategy)
}

