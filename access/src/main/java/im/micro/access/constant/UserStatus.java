// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constant/user_status.proto

package im.micro.access.constant;

/**
 * <pre>
 * 用户状态（参照QQ的用户状态）
 * </pre>
 *
 * Protobuf enum {@code im.turms.proto.UserStatus}
 */
public enum UserStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 活跃
   * </pre>
   *
   * <code>AVAILABLE = 0;</code>
   */
  AVAILABLE(0),
  /**
   * <pre>
   * 离线
   * </pre>
   *
   * <code>OFFLINE = 1;</code>
   */
  OFFLINE(1),
  /**
   * <pre>
   * 隐身
   * </pre>
   *
   * <code>INVISIBLE = 2;</code>
   */
  INVISIBLE(2),
  /**
   * <pre>
   * 忙碌
   * </pre>
   *
   * <code>BUSY = 3;</code>
   */
  BUSY(3),
  /**
   * <pre>
   *请勿打扰
   * </pre>
   *
   * <code>DO_NOT_DISTURB = 4;</code>
   */
  DO_NOT_DISTURB(4),
  /**
   * <pre>
   * 离开
   * </pre>
   *
   * <code>AWAY = 5;</code>
   */
  AWAY(5),
  /**
   * <pre>
   * 马上回来
   * </pre>
   *
   * <code>BE_RIGHT_BACK = 6;</code>
   */
  BE_RIGHT_BACK(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 活跃
   * </pre>
   *
   * <code>AVAILABLE = 0;</code>
   */
  public static final int AVAILABLE_VALUE = 0;
  /**
   * <pre>
   * 离线
   * </pre>
   *
   * <code>OFFLINE = 1;</code>
   */
  public static final int OFFLINE_VALUE = 1;
  /**
   * <pre>
   * 隐身
   * </pre>
   *
   * <code>INVISIBLE = 2;</code>
   */
  public static final int INVISIBLE_VALUE = 2;
  /**
   * <pre>
   * 忙碌
   * </pre>
   *
   * <code>BUSY = 3;</code>
   */
  public static final int BUSY_VALUE = 3;
  /**
   * <pre>
   *请勿打扰
   * </pre>
   *
   * <code>DO_NOT_DISTURB = 4;</code>
   */
  public static final int DO_NOT_DISTURB_VALUE = 4;
  /**
   * <pre>
   * 离开
   * </pre>
   *
   * <code>AWAY = 5;</code>
   */
  public static final int AWAY_VALUE = 5;
  /**
   * <pre>
   * 马上回来
   * </pre>
   *
   * <code>BE_RIGHT_BACK = 6;</code>
   */
  public static final int BE_RIGHT_BACK_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static UserStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static UserStatus forNumber(int value) {
    switch (value) {
      case 0: return AVAILABLE;
      case 1: return OFFLINE;
      case 2: return INVISIBLE;
      case 3: return BUSY;
      case 4: return DO_NOT_DISTURB;
      case 5: return AWAY;
      case 6: return BE_RIGHT_BACK;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<UserStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      UserStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<UserStatus>() {
          public UserStatus findValueByNumber(int number) {
            return UserStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return im.micro.access.constant.UserStatusOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final UserStatus[] VALUES = values();

  public static UserStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private UserStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:im.turms.proto.UserStatus)
}

