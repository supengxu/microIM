// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constant/request_status.proto

package im.micro.access.constant;

/**
 * Protobuf enum {@code im.micro.proto.RequestStatus}
 */
public enum RequestStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>PENDING = 0;</code>
   */
  PENDING(0),
  /**
   * <code>ACCEPTED = 1;</code>
   */
  ACCEPTED(1),
  /**
   * <code>ACCEPTED_WITHOUT_CONFIRM = 2;</code>
   */
  ACCEPTED_WITHOUT_CONFIRM(2),
  /**
   * <code>DECLINED = 3;</code>
   */
  DECLINED(3),
  /**
   * <code>IGNORED = 4;</code>
   */
  IGNORED(4),
  /**
   * <code>EXPIRED = 5;</code>
   */
  EXPIRED(5),
  /**
   * <code>CANCELED = 6;</code>
   */
  CANCELED(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>PENDING = 0;</code>
   */
  public static final int PENDING_VALUE = 0;
  /**
   * <code>ACCEPTED = 1;</code>
   */
  public static final int ACCEPTED_VALUE = 1;
  /**
   * <code>ACCEPTED_WITHOUT_CONFIRM = 2;</code>
   */
  public static final int ACCEPTED_WITHOUT_CONFIRM_VALUE = 2;
  /**
   * <code>DECLINED = 3;</code>
   */
  public static final int DECLINED_VALUE = 3;
  /**
   * <code>IGNORED = 4;</code>
   */
  public static final int IGNORED_VALUE = 4;
  /**
   * <code>EXPIRED = 5;</code>
   */
  public static final int EXPIRED_VALUE = 5;
  /**
   * <code>CANCELED = 6;</code>
   */
  public static final int CANCELED_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RequestStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RequestStatus forNumber(int value) {
    switch (value) {
      case 0: return PENDING;
      case 1: return ACCEPTED;
      case 2: return ACCEPTED_WITHOUT_CONFIRM;
      case 3: return DECLINED;
      case 4: return IGNORED;
      case 5: return EXPIRED;
      case 6: return CANCELED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RequestStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RequestStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RequestStatus>() {
          public RequestStatus findValueByNumber(int number) {
            return RequestStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return im.micro.access.constant.RequestStatusOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final RequestStatus[] VALUES = values();

  public static RequestStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RequestStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:im.micro.proto.RequestStatus)
}

